<-------------------- NumPy Functions ------------------->

array : Create an array.

zeros() : Create an array with all zeros.

ones() : Create an with all one.

eye() : Create an array with diagonal values as 1s and rest 
	all are 0s

diag(Elements) : creates a two dimensional array with all the diagonal element as the given 		 value and rest are zeros

randint(start, end, no. of elements) : Genreates random number between a given range.

rand() : This fuinction is used to generate a random number between 0 to 1.

randn() : This function is used to generate a random a number from -3 to 3. This may return 	  postive or negative number as well.

shape() : Returns number of rows and columns in array.

reshape(rows, columns) : It is used reshaping the array by rows and columns.

seed() : It is used to fix the number generated by random function.

copy() : It is used to copy the array to another variable.

arrange(start, end) : creates an array from starting value to ending value.

min(), max(), argmin(), argmax() : min, max values and index of minimum and maximum values.

sqrt() : square root.

Linspace() : This function returns value between a given range and with a same gap between 	     consecutive elements.

unique() : returnd 3 array ==> 1. array with ujnique value 
			       2. array with index values
			       3. array with counting of frequency of each element

hstack(arr1, arr2) : combine two arrays horizontally.
vstack(arr1, arr2) : combine two arrays vertically.



<-------------------- Pandas Functions ------------------->

Series() : returns a table with index and values.

DataFrame(data) : make a dataframe of the data.

columns() : returns all the columns in a dataframe

head(number of rows) : returns no. of given rows from starting. (default 5)

tail(number of rows) : returns no. of given rows from end. (default 5)

sample(no.  of rows) : returns random index rows.

describe() :  It returns statically view of data. (Count, Mean, Std, Min, 25%, 50%, 75%, Max)
	
info() : Complete overview of data.

to_csv(), to_excel() : save file in specific format.

read_csv() : reads csv file.

value_counts() : works on specific column and returns freq of each values in it.

loc[rows, columns (names) ] : returns specific portion of data frame. It is used when selected by labels.

iloc[rows, columns(names or index)] : returns specific portion of data frame. It is used when selected by position.

isnull() : It will returns true if you have missing values otherwise return False.

sum() : We can check Total missing values in our data frame.

dropna() : remove rows containing none values.

crosstab(dependent column, Independent column) : display table containing positive output of independent column based on dependent column.


---------------------------------------------------------------------------
1. Univeriate Analysis ==> Analysis on single Independent column
2. Biveriate Analysis ==> Analysis on two columns
3. Multiveriate Analysis ==> Analysis on more than 2 columns


Data types
1. Numerical Data => Continuous
2. Categorical Data => Discrete

---------------------------------------------------------------------------



<-------------------- Matplotlib Functions ------------------->



plot(kind = graph name) : plot graphs

hist(column) : hist graph



---------------------------------------------------------------------
In BoxPlot
#For Find our outlier

# 1.Lower fence
# 2.25% Data
# 3.IQR (Inter Quartile Range)(75%-25%)
# 4.75% Data
# Upper fence

---------------------------------------------------------------------


<-------------------- Seaborn Functions ------------------->


countplot(x = column) : works on categorical data, make colored bar graph for a columns.

distplot(column) : histgraph + line

boxplot(x = column) : boxplot => |--|_|--|

scatterplot(x = 1 column, y = 2 column)

heatmap(table like crosstab table) : colored square graph 























